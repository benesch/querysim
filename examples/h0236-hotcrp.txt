select Paper.*,
       PaperConflict.conflictType,
       R_submitted.overAllMeritScores,
       PaperReview.overAllMerit,
       R_submitted.reviewContactIds,
       PaperReview.reviewType,
       PaperReview.reviewId,
       PaperReview.reviewModified,
       PaperReview.reviewSubmitted,
       PaperReview.timeApprovalRequested,
       PaperReview.reviewNeedsSubmit,
       PaperReview.reviewOrdinal,
       PaperReview.reviewBlind,
       PaperReview.reviewToken,
       PaperReview.timeRequested,
       PaperReview.contactId as reviewContactId,
       PaperReview.requestedBy,
       max(PaperReview.reviewType) as myReviewType,
       max(PaperReview.reviewSubmitted) as myReviewSubmitted,
       min(PaperReview.reviewNeedsSubmit) as myReviewNeedsSubmit,
       PaperReview.contactId as myReviewContactId,
       PaperReview.reviewRound,

  (select group_concat(topicId)
   from PaperTopic
   where PaperTopic.paperId=Paper.paperId) topicIds,

  (select group_concat(PaperOption.optionId, '#', value)
   from PaperOption
   where paperId=Paper.paperId) optionIds,

  (select group_concat(' ', tag, '#', tagIndex
                       order by tag separator '')
   from PaperTag
   where PaperTag.paperId=Paper.paperId) paperTags,
       coalesce(PaperReviewPreference.preference, 0) as reviewerPreference,
       PaperReviewPreference.expertise as reviewerExpertise,
       APRP.allReviewerPreference,
       coalesce(APRP.desirability,0) as desirability,
       AllConflict.allConflictType,
       RPC.conflictType reviewerConflictType,
       RPR.reviewType reviewerReviewType
from Paper
left join PaperConflict on (PaperConflict.paperId=Paper.paperId
                            and PaperConflict.contactId=?)
left join PaperReview on (PaperReview.paperId=Paper.paperId
                          and PaperReview.contactId=?)
left join
  (select paperId,
          count(*) count,
                   group_concat(overAllMerit
                                order by reviewId) overAllMeritScores,
                   group_concat(contactId
                                order by reviewId) reviewContactIds
   from PaperReview
   where reviewSubmitted>0
   group by paperId) R_submitted on (R_submitted.paperId=Paper.paperId)
left join PaperReviewPreference on (PaperReviewPreference.paperId=Paper.paperId
                                    and PaperReviewPreference.contactId=?)
left join
  (select paperId,
          group_concat(concat(contactId,' ',preference,' ',coalesce(expertise,?)) separator ?) as allReviewerPreference,
          sum(if(preference<=?,0,greatest(least(preference,1),-1))) as desirability
   from PaperReviewPreference
   where true
   group by paperId) as APRP on (APRP.paperId=Paper.paperId)
left join
  (select paperId,
          group_concat(concat(contactId,' ',conflictType) separator ?) as allConflictType
   from PaperConflict
   where conflictType>0
   group by paperId) as AllConflict on (AllConflict.paperId=Paper.paperId)
left join PaperConflict RPC on (RPC.paperId=Paper.paperId
                                and RPC.contactId=?)
left join PaperReview RPR on (RPR.paperId=Paper.paperId
                              and RPR.contactId=?)
where timeSubmitted>0
group by Paper.paperId
order by Paper.paperId